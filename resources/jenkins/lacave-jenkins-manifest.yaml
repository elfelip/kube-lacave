---
apiVersion: v1
kind: Namespace
metadata:
    name: jenkins-system
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: jenkins-system
  labels:
    app: jenkins
spec:
  serviceName: jenkins
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: jenkins
          image: docker.lacave.info/jenkins:latest
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: docker-sock
              mountPath: /var/run/docker.sock
      initContainers:
        - name: initconfig
          image: docker.lacave.info/jenkins:latest
          command:
            - bash
            - -c
            - /prepare.sh
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        #runAsUser: 0
        #fsGroup: 0
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-claim
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-claim
  namespace: jenkins-system
  labels:
    app: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
  storageClassName: rook-ceph-block
---
apiVersion: v1
kind: Service
metadata:
  namespace: jenkins-system
  name: jenkins-service
spec:
  selector:
    app: jenkins
  ports:
  - name: web
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: jenkins-lacave-tls
  namespace: jenkins-system
spec:
  secretName: jenkins-lacave-tls
  issuerRef:
    name: ca-lacave-issuer
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
  commonName: jenkins.kube.lacave.info
  organization:
  - Lacave CA
  dnsNames:
  - jenkins.kube.lacave.info
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    namespace: jenkins-system
    name: ingress-jenkins
    annotations:
        kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - jenkins.kube.lacave.info
    secretName: jenkins-lacave-tls
  rules:
  - host: jenkins.kube.lacave.info
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins-service
          servicePort: 8080
