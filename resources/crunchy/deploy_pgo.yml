- name: Créer le namespace pour PGO
  k8s:
    kind: namespace
    name: pgo
  register: pgo_namespace_result
- name: Installer l'opérateur
  k8s:                                                                                                                                                                                                             
    definition: '{{ item }}'                                                                                                                                                                                       
    namespace: pgo
  with_items: '{{ lookup("url", pgo_manifest_url, split_lines=False) | from_yaml_all | list }}'                                              
  when: item is not none
  register: pgo_install_result
- name: Attendre 5 minutes que l'opérateur soit démarré
  pause:
    minutes: 5
  when: pgo_install_result is defined and pgo_install_result.changed is defined and pgo_install_result.changed
- name: Créer l'ingress pour l'opérateur
  k8s:
    definition: "{{ lookup('template', 'resources/crunchy/pgo-ingress-manifest.yaml.j2') }}"
    state: present
- name: Télécharger le script d'installation du client PGO
  get_url:
    url: "{{ pgo_client_url }}"
    dest: /tmp/client-setup.sh
    mode: '0755'
- name: Exécuter le script
  command:
    cmd: /tmp/client-setup.sh
    creates: "{{ ansible_env.HOME }}/.pgo"
  register: pgo_client_install_result
- name: Supprimer le script
  file:
    dest: /tmp/client-setup.sh
    state: absent
- name: Copier le client pgo dans /usr/local/bin
  copy:
    src: "{{ ansible_env.HOME }}/.pgo/pgo"
    dest: /usr/local/bin/pgo
    remote_src: yes
- name: Configurer les variables d'environnement pour le client PGO
  set_fact:
    pgo_client_env:
      PGOUSER: "{{ ansible_env.HOME }}/.pgo/pgo/pgouser"
      PGO_CA_CERT: "{{ ansible_env.HOME }}/.pgo/pgo/client.crt"
      PGO_CLIENT_CERT: "{{ ansible_env.HOME }}/.pgo/pgo/client.crt"
      PGO_CLIENT_KEY: "{{ ansible_env.HOME }}/.pgo/pgo/client.key"
      PGO_APISERVER_URL: "https://pgo.{{ kube_domain_name }}"
      PGO_NAMESPACE: pgo
- name: Configurer le profil de l'usager root pour PGO
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: "export {{ item.key }}={{ item.value }}"
    insertafter: EOF
    state: present
  with_items: "{{ pgo_client_env | dict2items }}"
- name: Obtenir l'état de l'opérateur
  command:
    cmd: pgo version
  environment: "{{ pgo_client_env }}"
  register: pgo_status_version
- name: Debug
  debug:
    var: pgo_status_version



