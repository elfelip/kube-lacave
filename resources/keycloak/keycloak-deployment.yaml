---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: login-kube-lacave-tls
  namespace: kube-system
spec:
  secretName: login-kube-lacave-tls
  issuerRef:
    name: ca-lacave-issuer
    kind: ClusterIssuer
  commonName: login.kube.lacave
  organization:
  - Lacave CA
  dnsNames:
  - login.kube.lacave
  - login.kube.lacave.info
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: login-lacave
  namespace: kube-system
  labels:
    app: login-lacave
spec:
  serviceName: login-lacave
  replicas: 2
  selector:
    matchLabels:
      app: login-lacave
  template:
    metadata:
      labels:
        app: login-lacave
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: keycloak
        image: docker.lacave.info/keycloak:10.0.2
        env:
        - name: KEYCLOAK_USER
          value: admin
        - name: KEYCLOAK_PASSWORD
          value: admin
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: postgres
        - name: DB_ADDR
          value: loginlacavecluster.kcdatabases
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          value: keycloak
        - name: DB_SCHEMA
          value: keycloak
        - name: DB_USER
          value: keycloak
        - name: DB_PASSWORD
          value: keycloak
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: JDBC_PING
#        - name: JGROUPS_DISCOVERY_PROTOCOL
#          value: dns.DNS_PING
#        - name: JGROUPS_DISCOVERY_PROPERTIES
#          value: "dns_query=login-lacave.kube-system.svc.cluster.lacave"
        ports:
        - containerPort: 8080
#        volumeMounts:
#        - name: login-lacave-data
#          mountPath: /opt/jboss/keycloak/standalone/data
#        - name: login-lacave-ceph-data
#          mountPath: /opt/jboss/keycloak/standalone/data
      securityContext:
        fsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
#      volumes:
#        - name: login-lacave-data
#          persistentVolumeClaim:
#            claimName: login-lacave-claim
#        - name: login-lacave-ceph-data
#          persistentVolumeClaim:
#            claimName: login-lacave-ceph-claim
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: login-lacave-claim
#  namespace: kube-system
#  labels:
#    app: login-lacave
#spec:
#  accessModes:
#  - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#  storageClassName: local-path
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#    name: login-lacave-ceph-claim
#    namespace: kube-system
#    labels:
#        app: login-lacave
#spec:
#    accessModes:
#    - ReadWriteOnce
#    resources:
#        requests:
#            storage: 10Gi
#    storageClassName: rook-ceph-block
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: kube-system
  name: ingress-login-lacave
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: ca-lacave-issuer
spec:
  tls:
  - hosts:
    - login.kube.lacave
    - login.kube.lacave.info
    secretName: login-kube-lacave-tls
  rules:
  - host: login.kube.lacave
    http:
      paths:
      - path: /
        backend:
          serviceName: login-lacave-service
          servicePort: 8080
  - host: login.kube.lacave.info
    http:
      paths:
      - path: /
        backend:
          serviceName: login-lacave-service
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: login-lacave-service
  namespace: kube-system
  labels:
    app: login-lacave
spec:
  ports:
  - name: web
    port: 8080
    protocol: TCP
  selector:
    app: login-lacave
