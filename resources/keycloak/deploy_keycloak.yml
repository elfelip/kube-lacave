- name: Voir si le namespace existe
  command: kubectl get namespace keycloak-system
  register: keycloak_namespace_exist
  ignore_errors: yes
- name: Démarrer le service port forward pour PGO API Server
  systemd:
    name: pgoapiserverportforward
    state: restarted
- name: Créer le namespace s'il n'existe pas
  command: pgo create namespace keycloak-system
  environment: "{{ pgo_client_env }}"
  when: keycloak_namespace_exist.rc == 1
- name: Obtenir l'état du cluster
  command: pgo show cluster login{{ project_name }}cluster --namespace keycloak-system
  environment: "{{ pgo_client_env }}"
  register: keycloak_db_cluster_status
- name: Cluster Status
  debug:
    var: keycloak_db_cluster_status
- name: Créer le cluster
  command:
    cmd: |
      pgo create cluster login{{ project_name }}cluster --namespace keycloak-system --database keycloak --username {{ login_keycloak_db_username }} --password {{ login_keycloak_db_password }} --pvc-size {{ login_keycloak_db_pvc_size | default('10Gi') }} --storage-config rook --pgbackrest-storage-config rook --replica-count {{ login_keycloak_db_replica_count | default ('2') }} --replica-storage-config rook --metrics
  environment: "{{ pgo_client_env }}"
  when: keycloak_db_cluster_status.stdout == "No clusters found."
- name: Arrêter le service port forward pour PGO API Server
  systemd:
    name: pgoapiserverportforward
    state: stopped
- name: Créer le répertoire temporaire pour créer l'image de base
  file:
    dest: /tmp/keycloak
    state: directory
- name: Copier les fichers pour l'image dans le répertoire temporaire
  copy:
    dest: /tmp/keycloak
    src: resources/keycloak/image/
- name: Copier les certificats à insérer dans l'image.
  copy:
    src: resources/cert/lacave-root-ca.crt
    dest: /tmp/keycloak/image
- name: Créer l'image de base Keycloak
  docker_image:
    name: "{{ kube_registry_url }}/{{ project_name }}/keycloak"
    tag: "{{ login_keycloak_version | default('11.0.3)') }}"
    source: build
    build:
      path: "/tmp/keycloak/image/"
      dockerfile: "Dockerfile"
      pull: yes
      args:
        KEYCLOAK_IMAGE: "{{ login_lacave_keycloak_base_image | default('jboss/keycloak') }}"
        KEYCLOAK_VERSION: "{{ login_keycloak_version | default('11.0.3)') }}"
    state: present
    force_source: yes
    force_tag: yes
    push: yes
  run_once: true