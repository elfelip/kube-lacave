- hosts: management
  vars:
    helm_version: v3.0.2
    helm_install_url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
    cert_manager_version: v1.1.0
    cert_manager_manifest_url: "https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.yaml"
    rook_operator_version: v1.4.6
    ceph_version: v15.2.4
    pgo_version: v4.5.1
    pgo_repository_base_url: https://raw.githubusercontent.com/CrunchyData/postgres-operator
    pgo_client_url: "{{ pgo_repository_base_url }}/{{ pgo_version }}/installers/kubectl/client-setup.sh"
    pgo_manifest_url: "{{ pgo_repository_base_url }}/{{ pgo_version }}/installers/kubectl/postgres-operator.yml"
    eck_manifest_url: "https://download.elastic.co/downloads/eck/{{ eck_version | default('1.2.1') }}/all-in-one.yaml"
    registry_internal_url: registry.kube-system.svc:5000
  tasks:
  - name: Installer le module Kubernetes pour Python3
    apt:
      pkg: 
        - python3-kubernetes
        - python3-docker
      state: present
    when: ansible_os_family == "Debian"
  - name: Installer les packages Python
    pip:
      name: openshift
      extra_args: --user
      state: present
  - name: Créer le répertoire pour la configuration de kubectl
    file:
      dest: "{{ ansible_env.HOME }}/.kube"
      state: directory
  - name: Copier le fichier qui contient le crédentiel Admin
    copy:
      src: inventory/lacave/artifacts/admin.conf
      dest: "{{ ansible_env.HOME }}/.kube/config"
  - name: Installer Helm
    snap:
      classic: yes
      name: helm
      state: present
  - name: Installer le référentiel stable de Helm
    community.kubernetes.helm_repository:
      name: stable
      repo_url: "https://charts.helm.sh/stable"
      state: present
  - name: Creer l'utilisateur admin pour le tableau de bord Kubernetes
    k8s:
      state: present
      definition: "{{ lookup('file','resources/dashboard-adminuser.yml') }}"    
  - name: Deployer Cert-Manager
    include_tasks: resources/cert/deploy_cert_manager.yml
  - name: Déployer l'Ingress pour le registre Interne
    k8s:                                                                                                                                                                                                             
      state: present
      definition: "{{ lookup('template','resources/ingress/registry-ingress-manifest.yaml.j2') }}"
  - name: Deployer Rook-CEPH
    include_tasks: resources/rook/deploy_rook.yml
  - name: Deployer Monitoring
    include_tasks: resources/monitoring/deploy_monitoring.yml
  - name: Deployer Nexus
    include_tasks: resources/nexus/deploy_nexus.yml
  - name: Deployer ECK
    include_tasks: resources/journalisation/deploy_eck.yml
  - name: Deployer Graylog
    include_tasks: resources/journalisation/deploy_graylog.yml
  - name: Deployer l'opérateur Postgres
    include_tasks: resources/crunchy/deploy_pgo.yml
  - name: Deployer Keycloak
    include_tasks: resources/keycloak/deploy_keycloak.yml
  - name: URL du registre d'image interne du kube
    debug:
      var: kube_registry_url
  - name: URL du dashboard CEPH
    debug:
      var: rook_ceph_dashboard_url
  - name: Afficher le mot de passe Dashboard CEPH
    debug:
      var: rook_ceph_dashboard_password
  - name: URL de Grafana
    debug:
      var: grafana_url
  - name: Mot de passe admin de Grafana
    debug:
      var: grafana_admin_password
  - name: URL Docker du Nexus
    debug: 
      var: nexus_docker_repository_url
  - name: URL du dépôt Nexus
    debug:
      var: nexus_repository_url
  - name: Mot de passe admin pour le Nexus
    debug:
      var: nexus_admin_password
  - name: URL de Kibana
    debug:
      var: eck_kibana_url
  - name: Afficher le mot de passe elastic pour ECK
    debug:
      var: eck_elastic_password
  - name: URL de Graylog
    debug:
      var: graylog_url
  - name: Afficher le mot de passe admin pour Graylog
    debug:
      var: graylog_password
  - name: URL du serveur Keycloak principal
    debug:
      var: login_keycloak_url
  - name: Username admin pour Keycloak
    debug:
      var: login_keycloak_admin_username
  - name: Mot de passe admin pour Keycloak
    debug:
      var: login_keycloak_admin_password