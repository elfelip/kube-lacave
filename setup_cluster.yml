- hosts: management
  vars:
    helm_install_url: https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz
    cert_manager_manifest_url: https://github.com/jetstack/cert-manager/releases/download/v1.0.4/cert-manager.yaml
  tasks:
  - name: Installer le module Kubernetes pour Python3
    apt:
      name: python3-kubernetes
      state: present
    when: ansible_os_family == "Debian"
  - name: Installer les packages Python
    pip:
      name: openshift
      extra_args: --user
      state: present
  - name: Créer le répertoire pour la configuration de kubectl
    file:
      dest: "{{ ansible_env.HOME }}/.kube"
      state: directory
  - name: Copier le fichier qui contient le crédentiel Admin
    copy:
      src: inventory/lacave/artifacts/admin.conf
      dest: "{{ ansible_env.HOME }}/.kube/config"
  - name: Creer l'utilisateur admin pour le tableau de bord Kubernetes
    k8s:
      state: present
      definition: "{{ lookup('file','resources/dashboard-adminuser.yml') }}"    
  - name: Créer le namespace pour cert-manager
    k8s:
      kind: namespace
      name: cert-manager
  - name: Installer cert-manager
    k8s:                                                                                                                                                                                                             
      definition: '{{ item }}'                                                                                                                                                                                       
      namespace: cert-manager                                                                                                                                                                                        
    with_items: '{{ lookup("url", cert_manager_manifest_url, split_lines=False) | from_yaml_all | list }}'                                              
    when: item is not none
  - name: Installer le certificat root self-signed
    k8s:                                                                                                                                                                                                             
      definition: '{{ item }}'                                                                                                                                                                                       
      namespace: cert-manager                                                                                                                                                                                        
    with_items: '{{ lookup("file", "resources/cert/root-ca-cert-manager.yml", split_lines=False) | from_yaml_all | list }}'                                              
    when: item is not none
